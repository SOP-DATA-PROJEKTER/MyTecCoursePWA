@using MyTecCoursePWA.Components.Navbar
@using MyTecCoursePWA.Components.Footer

@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<CascadingValue Value="this">
	<div class="page flex min-h-screen flex-col">
		<div class="h-16 md:h-20 lg:h-28 xl:h-16">
			<Navbar />
		</div>
		<main class="flex-grow" style="background-color: @backgroundColor">
			<article class="fade-container mx-1 my-8 overflow-hidden px-4 md:mx-6 @fadeClass">
				@Body
			</article>
		</main>
		<div>
			<Footer />
		</div>
	</div>
</CascadingValue>

@code {
	private string fadeClass = "";
	private string backgroundColor = "transparent"; // Default color

	public string BackgroundColor
	{
		get => backgroundColor;
		set
		{
			if (backgroundColor != value)
			{
				backgroundColor = value;
				StateHasChanged(); // Refresh layout when background color changes
			}
		}
	}

	public async Task HandleMessageFromPage(string link)
	{
		fadeClass = "fade-out";
		StateHasChanged();

		await Task.Delay(250);

		backgroundColor = "transparent";

		NavigationManager.NavigateTo(link);

		fadeClass = "fade-in";
		StateHasChanged();

		await Task.Delay(250);

		fadeClass = "";
		StateHasChanged();

		InvokeAsync(() => StateHasChanged());

	}
}