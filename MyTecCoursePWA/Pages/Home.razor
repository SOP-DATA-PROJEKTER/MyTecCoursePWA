@page "/"
@using MyTecCoursePWA.Services
@using MyTecCoursePWA.Components.Buttons
@using MyTecCoursePWA.Components.Skeletons
@using MyTecCoursePWA.Layout
@using MyTecCoursePWA.Models
@inject APIService APIService

<div class="px-4">
    <div class="my-10 flex-col justify-items-center lg:my-12">
        <h1 class="mb-12 w-72 text-center font-sans text-4xl font-bold sm:text-6xl md:w-full">
            Mit TEC Forløb!
        </h1>
        @if (isLoading)
        {
			<SkeletonBox amount="2" />
        }
        else
        {
            <div class="flex w-full flex-wrap justify-center gap-4 md:gap-6 lg:gap-8 xl:gap-10">
                @foreach (var item in educationList)
                {
                    <div class="my-4 w-72 sm:w-1/2 sm:h-40 sm:my-6 md:w-1/3 md:my-8 lg:my-10 xl:w-3/12 xl:my-12">
                        <ArrowButton Name="@item.Name" Description="@item.Description" Link="@item.Id" OnButtonClicked="HandleArrowButtonClick" />
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    [CascadingParameter] public MainLayout Layout { get; set; }
    List<Education> educationList = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        string endpoint = "education";
        try
        {
            educationList = await APIService.GetAllAsync<Education>(endpoint);
        }
        finally
        {
            await Task.Delay(2000);
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task HandleArrowButtonClick(string link)
    {
        Console.WriteLine("Event Recieved!");
        await LinkManagerService.LinkManagerHandler(link, Layout);
    }

}