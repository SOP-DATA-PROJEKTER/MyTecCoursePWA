@page "/{educationName}/{id}"
@using MyTecCoursePWA.Models
@using MyTecCoursePWA.Components.Buttons

@inject MockEducationService EducationService
@inject APIService ApiService

<div class="m-4 h-full w-full lg:m-20">

<h2 class="mb-4 text-xl font-bold md:text-2xl lg:text-4xl xl:text-xl">Vælg en uddannelsesvej</h2>

@if (FilteredEducationList == null || FilteredEducationList.Count == 0)
{
    <div>Uddannelsen blev ikke fundet</div>
}
else
{
    @foreach (var education in FilteredEducationList)
    {
        <div key="@education.Id" class="mb-4">
            <h3 class="text-lg font-semibold md:text-xl lg:text-2xl xl:text-lg">@education.Name</h3>

            <!-- Pathway Selection -->
            <div class="mt-2 flex flex-wrap gap-2">
                @foreach (var pathway in education.Pathways)
                {
                    bool isPathwaySelected = SelectedPathwayId == pathway.Id;
                    bool showPathway = SelectedPathwayId == null || isPathwaySelected;

                    if (showPathway)
                    {

                        <SelectionButton Label="@pathway.Name"
                        IsSelected="isPathwaySelected"
                        OnClick="() => TogglePathway(pathway.Id)" />
                    }
                }
            </div>

            <!-- Specialization Selection -->
            @if (SelectedPathwayId != null)
            {
                var selectedPathway = education.Pathways.FirstOrDefault(p => p.Id == SelectedPathwayId);
                if (selectedPathway != null)
                {
                    <div class="mt-2">
                        <h4 class="text-base font-semibold md:text-lg lg:text-xl xl:text-base">Vælg en specialisering:</h4>
                        <div class="mt-1 flex flex-wrap gap-2">
                            @foreach (var specialization in selectedPathway.Specializations)
                            {
                                bool isSpecializationSelected = SelectedSpecializationId == specialization.Id;
                                bool showSpecialization = SelectedSpecializationId == null || isSpecializationSelected;

                                if (showSpecialization)
                                {
                                    <SelectionButton Label="@specialization.Name"
                                    IsSelected="isSpecializationSelected"
                                    OnClick="() => ToggleSpecialization(specialization.Id)" />
                                }
                            }
                        </div>
                    </div>
                }
            }

            <!-- Course Selection -->
            @if (SelectedSpecializationId != null)
            {
                var selectedSpecialization = education.Pathways
                    .SelectMany(p => p.Specializations)
                    .FirstOrDefault(s => s.Id == SelectedSpecializationId);

                if (selectedSpecialization != null)
                {
                    <div class="mt-2">
                        <h4 class="text-base font-semibold md:text-lg lg:text-xl xl:text-base">Vælg et forløb:</h4>
                        <div class="mt-1 flex flex-wrap gap-2">
                            @foreach (var course in selectedSpecialization.Courses)
                            {
                                bool isCourseSelected = SelectedCourseId == course.Id;
                                bool showCourse = SelectedCourseId == null || isCourseSelected;

                                if (showCourse)
                                {
                                    <SelectionButton Label="@course.Name"
                                    IsSelected="isCourseSelected"
                                    OnClick="() => ToggleCourse(course.Id)" />
                                }
                            }
                        </div>

                        <!-- Show subjects when a course is selected -->
                        @if (SelectedCourseId != null)
                        {
                            var selectedCourse = selectedSpecialization.Courses.FirstOrDefault(c => c.Id == SelectedCourseId);
                            if (selectedCourse != null)
                            {
                                <div class="mt-2 rounded-md border-l-4 border-blue-500 bg-gray-200 p-4 transition-colors duration-200">
                                    @if (selectedCourse.Subjects.Any())
                                    {
                                        @foreach (var subject in selectedCourse.Subjects)
                                        {
                                            <div key="@subject.Id" class="mb-4 rounded-md bg-gray-300 p-4">
                                                <!-- Subject button to expand details -->
                                                <button class="flex w-full cursor-pointer items-center justify-between rounded-md bg-gray-300 p-2 text-left font-semibold text-gray-900 transition hover:bg-blue-500 hover:text-white"
                                                @onclick="() => ToggleSubject(subject.Id)">
                                                    @subject.Name <span>@(ExpandedSubjects.Contains(subject.Id) ? "🔼" : "🔽")</span>
                                                </button>

                                                <!-- Show subject details when expanded -->
                                                @if (ExpandedSubjects.Contains(subject.Id))
                                                {
                                                    <div class="mt-2 rounded-md bg-gray-200 p-2 text-gray-900">
                                                        <h4 class="mt-3 text-base font-semibold text-blue-500 md:text-lg lg:text-xl xl:text-base">📖  Fagbeskrivelse:
                                                        </h4>
                                                        <ul class="list-disc pl-4">
                                                            <li class="text-base md:text-lg lg:text-xl xl:text-base">@subject.Description</li>

                                                        </ul>
                                                    </div>
                                                    <div class="mt-2 rounded-md bg-gray-200 p-2 text-gray-900">
                                                        <h4 class="mt-3 text-base font-semibold text-blue-500 md:text-lg lg:text-xl xl:text-base">✔️ Målpinde:</h4>
                                                        <ul class="list-disc pl-4">
                                                            @foreach (var milestone in subject.Milestones)
                                                            {
                                                                <li class="text-base md:text-lg lg:text-xl xl:text-base">@milestone.Description</li>
                                                            }
                                                        </ul>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p class="text-gray-400">⚠️ Ingen fag i dette kursus</p>
                                    }
                                </div>
                            }
                        }
                    </div>
                }
            }
        </div>
    }
}
</div>

@code {
    [Parameter]
    public string educationName { get; set; }
    [Parameter]
    public string id { get; set; }

    private Education? Education;
    private Pathway? SelectedPathway;
    private Specialization? SelectedSpecialization;
    private Course? SelectedCourse;
    private HashSet<int> ExpandedSubjects = new HashSet<int>();
    private List<Education> FilteredEducationList = new List<Education>();

    protected override async Task OnInitializedAsync()
    {
        Education = await ApiService.GetByIdAsync<Education>("Education", id);
        FilteredEducationList = Education != null ? new List<Education> { Education } : new List<Education>();
    }

    private void TogglePathway(int id)
    {
        SelectedPathwayId = id == SelectedPathwayId ? null : id;
        SelectedSpecializationId = null;
        SelectedCourseId = null;
    }

    private void ToggleSpecialization(int id)
    {
        SelectedSpecializationId = id == SelectedSpecializationId ? null : id;
        SelectedCourseId = null;
    }

    private void ToggleCourse(int id)
    {
        SelectedCourseId = id == SelectedCourseId ? null : id;
    }

    private void ToggleSubject(int id)
    {
        if (ExpandedSubjects.Contains(id))
            ExpandedSubjects.Remove(id);
        else
            ExpandedSubjects.Add(id);
    }

    private int? SelectedPathwayId { get; set; }
    private int? SelectedSpecializationId { get; set; }
    private int? SelectedCourseId { get; set; }
}
